{"version":3,"sources":["component/HeaderComponent.tsx","component/ListTechnicianComponent.jsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HeaderComponent","props","state","Component","ListTechnicianComponent","cleanEmployee","e","history","push","saveOrUpdateEmployee","preventDefault","custInfo","service_id","description","reqOpts","method","headers","body","JSON","stringify","fetch","then","response","console","log","json","data","suggestions","setState","priority","customerName","customerAddress","suggestList","changeCustomerNameHandler","event","target","value","changeserviceidHandler","changeDescriptionHandler","resultForRandom","techList","listTech","bind","this","id","className","style","marginTop","placeholder","name","onChange","onClick","type","map","technician","index","vehicle_id","distance","similar_tickets_closed","number_of_visits","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a8a1a9b.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass HeaderComponent extends Component {\r\n    constructor(props:any) {\r\n        super(props)\r\n\r\n        this.state = {\r\n                 \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* <header>\r\n                    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n                    <div><a href=\"https://javaguides.net\" className=\"navbar-brand\">Employee Management App</a></div>\r\n                    </nav>\r\n                </header> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeaderComponent","import React, { Component } from 'react'\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\r\n\r\n\r\n\r\n//const arr = [];\r\nclass ListTechnicianComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            // step 2\r\n            //id: this.props.match.params.id,\r\n            service_id: '',\r\n            customerName: '',\r\n            customerAddress: '',\r\n            description: '',\r\n            priority: 0 ,\r\n            resultForRandom:0,\r\n            techList:[],\r\n            suggestList:[],\r\n            listTech:[]\r\n            //,\r\n            //emailId: ''\r\n        }\r\n        this.changeCustomerNameHandler = this.changeCustomerNameHandler.bind(this);\r\n        this.changeDescriptionHandler = this.changeDescriptionHandler.bind(this);\r\n        this.saveOrUpdateEmployee = this.saveOrUpdateEmployee.bind(this);\r\n        this.cleanEmployee = this.cleanEmployee(this);\r\n\r\n    }\r\n\r\n\r\n    // step 3\r\n    componentDidMount(){\r\n\r\n        fetch(\"http://127.0.0.1:5000/techs\").then((response)=> {\r\n            console.log(response);\r\n            response.json().then(data => {\r\n                console.log(data.techList);\r\n                this.setState({techList : data.techList})\r\n            })\r\n        })\r\n\r\n\r\n    }\r\n\r\n    cleanEmployee = (e) =>{\r\n        this.props.history.push('/');\r\n    }\r\n    saveOrUpdateEmployee = (e) => {\r\n        e.preventDefault();\r\n\r\n        var custInfo = {\r\n            \"customer_id\":this.state.service_id,\r\n            \"service_desc\": this.state.description\r\n        }\r\n\r\n        const reqOpts = {\r\n            method:'POST',\r\n            headers: {'Content-Type':'application/json'},\r\n            body: JSON.stringify(custInfo)\r\n        }\r\n\r\n        fetch(\"http://127.0.0.1:5000/ticket_details\",reqOpts).then((response)=> {\r\n            console.log(response);\r\n            response.json().then(data => {\r\n                console.log(data.suggestions);\r\n                this.setState({priority: data.priority, customerName: data.customerName,customerAddress: data.customerAddress,description: data.description, suggestList: data.suggestions});\r\n            })\r\n        })\r\n    }\r\n    \r\n    changeCustomerNameHandler= (event) => {\r\n        this.setState({customerName: event.target.value});\r\n    }\r\n\r\n    changeserviceidHandler= (event) => {\r\n        this.setState({service_id: event.target.value});\r\n    }\r\n\r\n    changeDescriptionHandler= (event) => {\r\n        this.setState({description: event.target.value});\r\n    }\r\n\r\n    cancel(){\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    getTitle(){\r\n        if(this.state.id === '_add'){\r\n            return <h3 className=\"text-center\">Add Employee</h3>\r\n        }else{\r\n            return <h3 className=\"text-center\">Update Employee</h3>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                 <h1 className=\"text-center\">Clima Tech</h1>\r\n                 <h3 className=\"text-center\">Control Center</h3>\r\n                 <br></br>\r\n                 <div className = \"row\">\r\n                    <div className = \"col-sm-12\" >\r\n                        {/* <MDBTable className = \"table table-striped table-bordered\">\r\n\r\n                            <MDBTableHead>\r\n                                <tr>\r\n                                     */}{/* <th><b>NO.</b></th> */}{/*\r\n                                    <th><b>TECHNICIAN</b></th>\r\n                                     */}{/* <th><b>TOTAL CLOSED TICKETS IN 2 YEARS</b></th> */}{/*\r\n                                     */}{/* <th><b>TOTAL COMPLETED TICKETS</b></th> */}{/*\r\n                                     */}{/* <th><b>TOTAL OPEN TICKETS</b></th> */}{/*\r\n                                     */}{/* <th><b>PERCENTAGE OF TICKET COMPLETION</b></th> */}{/*\r\n                                     */}{/* <th><b>MONTHS OF EXPERIENCE</b></th> */}{/*\r\n                                    <th><b>CURRENT LATITUDE</b></th>\r\n                                    <th><b>CURRENT LONGITUDE</b></th>\r\n                                    <th><b>LOCATION ADDRESS</b></th>\r\n                                    <th><b>HEADING TOWARDS</b></th>\r\n\r\n\r\n                                </tr>\r\n                            </MDBTableHead>\r\n                            <MDBTableBody>\r\n                                {\r\n                                    this.state.techList && this.state.techList.map(\r\n                                        technician => \r\n                                        <tr key = {technician.key}>\r\n                                             */}{/* <td> { technician.key} </td>   */}{/*\r\n                                             <td> { technician.technician} </td>\r\n                                              */}{/* <td> {technician.Closed}</td>\r\n                                             <td> {technician.Complete}</td>\r\n                                             <td> { technician.Open} </td>\r\n                                             <td> {technician.completion_rate}</td>\r\n                                             <td> {technician.experience_in_months}</td> */}{/*\r\n                                             <td> {technician.latitude}</td>\r\n                                             <td> {technician.longitude}</td>\r\n                                             <td> {technician.location_address}</td>\r\n                                             <td> {technician.heading_towards}</td>\r\n\r\n                                        </tr>\r\n                                    )\r\n                                }\r\n                            </MDBTableBody>\r\n                        </MDBTable> */}\r\n                    </div>\r\n                 </div>\r\n                 <div className = \"row\" style={{marginTop:'50px'}}>\r\n                    <div className = \"col-sm-12\" >\r\n                        <form>\r\n                             <div className = \"row\" style={{marginTop:'50px'}}>\r\n                                <div className = \"col-2\" >\r\n                                    <label> Service ID: </label>\r\n                                </div>\r\n                                <div className = \"col-6\" >\r\n                                    <input placeholder=\"Service Id\" name=\"service_id\" className=\"form-control\"\r\n                                    value={this.state.service_id} onChange={this.changeserviceidHandler}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className = \"row\" style={{marginTop:'50px'}}>\r\n                            <div className = \"col-sm-12 col-md-6\" >\r\n                                    {/* <button className=\"btn btn-info\" onClick={this.cleanEmployee}>clean</button> */}\r\n                                </div>\r\n                                <div className = \"col-sm-12 col-md-6\" >\r\n                                    <button className=\"btn btn-success\" onClick={this.saveOrUpdateEmployee}>submit</button>\r\n                                </div>\r\n                             </div>\r\n\r\n                            <div className = \"row\" style={{marginTop:'50px'}}>\r\n                                <div className = \"col-2\" >\r\n                                    <label> Customer Number: </label>\r\n                                </div>\r\n                                <div className = \"col-6\" >\r\n                                    <input placeholder=\"Customer Name\" name=\"customerName\" className=\"form-control\"\r\n                                    value={this.state.customerName} onChange={this.changeCustomerNameHandler}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className = \"row\" style={{marginTop:'50px'}}>\r\n                                <div className = \"col-2\" >\r\n                                    <label>Address Code: </label>\r\n                                </div>\r\n                                <div className = \"col-6\" >\r\n                                    <input placeholder=\"Customer Address\" name=\"customerAddress\" className=\"form-control\"\r\n                                    value={this.state.customerAddress}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className = \"row\" style={{marginTop:'50px'}}>\r\n                                <div className = \"col-2\" >\r\n                                    <label> Service  Description: </label>\r\n                                </div>\r\n                                <div className = \"col-6\" >\r\n                                    <textarea type=\"text\" id=\"description\" className=\"form-control\" name=\"description\" value={this.state.description} placeholder=\"Description\"  />\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                 </div>\r\n                 <div className = \"row\" style={{marginTop:'50px'}}>\r\n                    <div className = \"col-2\" >\r\n                        Priority of ticket (1=Very Urgent; 5=Lowest Priority):\r\n                    </div>\r\n                    <div className = \"col-4\" >\r\n                        <input placeholder=\"random\" name=\"random\" className=\"form-control\"  value={this.state.priority} />\r\n                    </div>\r\n                    \r\n                 </div>\r\n\r\n                 {/* <div className = \"row\" style={{marginTop:'50px'}}>\r\n                    <div className = \"col-sm-12\" >\r\n                        <MDBTable className = \"table table-striped table-bordered\">\r\n                            <MDBTableHead>\r\n                                <tr>\r\n                                    <th> Id </th>\r\n                                    <th> Technician</th>\r\n                                    <th> phone_number</th>\r\n                                    <th> Availability</th>\r\n                                </tr>\r\n                            </MDBTableHead>\r\n                            <MDBTableBody>\r\n                                \r\n                                {this.state.techList.map((technician, index) => {\r\n                                        if ( this.state.resultForRandom > (index)) {\r\n                                            return (\r\n                                                <tr key = {technician.key}>\r\n                                                    <td> { technician.key} </td>\r\n                                                    <td> { technician.Technician} </td>\r\n                                                    <td> { technician.phone_number} </td>\r\n                                                    <td> {technician.Availability}</td>\r\n                                                </tr> \r\n                                            )\r\n                                        } else {\r\n                                            return (null)\r\n                                        }\r\n                                    }\r\n                                )}\r\n                            </MDBTableBody>\r\n                        </MDBTable>\r\n                    </div>\r\n                 </div> */}\r\n\r\n\r\n                 <div className = \"row\" style={{marginTop:'50px'}}>\r\n                    <div className = \"col-sm-12\" >\r\n                        <MDBTable className = \"table table-striped table-bordered\">\r\n                            <MDBTableHead>\r\n                                <tr>\r\n                                    <th><b> Vehicle ID </b></th>\r\n                                    <th><b> Technician </b></th>\r\n                                    <th><b> Distance in miles </b></th>\r\n                                    <th><b> Similar Tickets Closed </b></th>\r\n                                    {/* <th><b> Recommend </b></th> */}\r\n                                    <th><b> Number of visits to this customer </b></th>\r\n                                    {/* <th><b> Top Skill Set </b></th> */}\r\n                                </tr>\r\n                            </MDBTableHead>\r\n                            <MDBTableBody>\r\n                                {this.state.suggestList.map((technician, index) => {\r\n                                    \r\n                                            return (\r\n                                                <tr>\r\n                                                    <td> { technician.vehicle_id} </td>\r\n                                                    <td> { technician.name} </td>\r\n                                                    <td> { technician.distance} </td>\r\n                                                    <td> { technician.similar_tickets_closed} </td>\r\n                                                    {/* <td><b> { technician.recommend} </b></td> */}\r\n                                                    <td> { technician.number_of_visits} </td>\r\n\r\n\r\n                                                    {/* <td> {technician.Availability}</td> */}\r\n\r\n                                                </tr> \r\n                                            )\r\n                                    }\r\n                                )}\r\n                            </MDBTableBody>\r\n                        </MDBTable>\r\n                    </div>\r\n                 </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListTechnicianComponent","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link, Switch, Redirect } from \"react-router-dom\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\nimport FooterComponent from './component/HeaderComponent';\nimport ListTechnicianComponent from './component/ListTechnicianComponent';\nimport HeaderComponent from './component/HeaderComponent';\n\n\nfunction App() {\n  return (\n    // <div className=\"App\">\n      <div>\n        <Router>\n              <HeaderComponent />\n                <div className=\"container\">\n                    <Switch> \n                          <Route path = \"/\" exact component = {ListTechnicianComponent}></Route>\n                    </Switch>\n                </div>\n              <FooterComponent />\n        </Router>\n    </div>\n    // </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}